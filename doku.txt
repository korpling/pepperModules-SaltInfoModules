general
=======
- creates xml, along schema XXX
- creates html file 
- can be customized to suppress creation of html

- explain how does the site works in general:
	- on the top a header conatining the name of the corpus (and eventually a short description, see customization XXX)
	- on the left a navigation bar, where all corpora and documents listed in a tree structure, representing their hierarchie, clicking one of them opens the document or corpus in the centered part
	- on the centered part first, a description of the corpus is shown, which can contain a description of the corpus (see customization XXX) and eventually the annotators (see customization XXX), when opening a document or corpus you will see first a table containing structural data (since in Salt each linguistic object is mapped to a graph object (node, relation or label)), a metadata section listing all metadata of the document or corpus and a annotation section showing all annotation names and values of the document or corpus
	- a footer containing a link to the impressum, which should be adopted (see customization XXXimpressum)
	

customization
=============
mostly via customization.json

- shortdescription a short description displayed under name of corpus (show picture), how to do:
{
...
"shortDescription" : "short description of myCorpus",
...
}

- description a detailed description of the corpus which is displayed on the entrance page or when clicking on about
{
...
"description" : "Here you can enter a description of your corpus.",
...
}

- annotators a list of annotators taking part at the corpus creation, can be listed with names and eMail addresses, is displayed on entrance page or when clicking on about:
{
...
"annotators" : [ {"name" : "John Doe", "eMail" : "john-doe@sample.com"}, {"name" : "Jane Doe", "eMail" : "jane-doe@sample.com"}],
...
}

- entrance page or when clicking on about
if the described customization does not fullfill your needs, you can also create an entire html page and replace existing main.html with it (make sure, to keep the name main.html)

- annis link
when your corpus is available in an ANNIS instance (see: ) you can add the link of that instance to customization.json
{
...
"annisLink" : "https://korpling.german.hu-berlin.de/annis3/"
...
}
Setting this customization switches on 
1) a link to the corpus in the Annis instance in the header section, see sample
2) enables a link in annotation names of all corpora and documents in the Annis instance. Clicking on such a name creates automatically an Annis query and opens it in a new tab
3) enables a link in annotation values of all corpora and documents in the Annis instance. Clicking on such a name creates automatically an Annis query and opens it in a new tab

- tooltips
The site offers you the possibility to create customized tooltips for all annotation names and names of meta data. For instance to give the user a detailed description about the meaning of the data
{
...
"tooltips_metadata" : [
		{"name": "META_NAME_1", "tooltip": "DESCRIPTION"},
		{"name": "META_NAME_2", "tooltip": "DESCRIPTION"},
		...
		{"name": "META_NAME_N", "tooltip": "DESCRIPTION"}
	],
	"tooltips_annonames" : [
		{"name": "ANNO_NAME_1", "tooltip": "DESCRIPTION"},
		{"name": "ANNO_NAME_2", "tooltip": "DESCRIPTION"},
		...
		{"name": "ANNO_NAME_N", "tooltip": "DESCRIPTION"}
	],
...
}
where ANNO_NAME_X is the name of the annotation, META_NAME_X is the name of the metadata, DESCRIPTION is the description of that annotation or the metadata

- impressum
You should adopt the impressum for your specific dates, like who is in charge for that site etc. You can do that by adopting the following HTML snippet:

<article id="impAnschrift">
		Angaben gemäß § 5 TMG:<br /> <br />INSTITUTION<br />
		ADDRESS<br />
		<hr />
		<br />
		<h3 id="impContact">Contact</h3>
		<table class="impContact">
			<tr>
				<td>phone:</td>
				<td>PHONE_NUMBER</td>
			</tr>
			<tr>
				<td>E-Mail:</td>
				<td>EMAIL</td>
			</tr>
		</table>
	</article>

browsers
========
- optimized for mozilla firefox
- running in chrome:
need to run on server since cross origin problems
Cross origin requests are only supported for protocol schemes: http, data, chrome-extension, https, chrome-extension-resource.
